{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport { gql, useQuery } from '@apollo/client';\nimport { useState, useContext } from 'react';\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Row, Col } from \"reactstrap\";\n\nfunction Dishes({\n  restId\n}) {\n  const {\n    0: restaurantID,\n    1: setRestaurantID\n  } = useState();\n  const {\n    addItem\n  } = useContext(AppContext);\n  const GET_RESTAURANT_DISHES = gql`\nquery GET_DISHES_BY_REST_ID($id:ID!)\n{\n  restaurant (id:$id){\n          data{\n          attributes{\n            name,\n            dishes{\n              data{\n                id,\n                attributes{\n                  name,\n                  description,\n                  price,\n                  image{\n                    data{\n                      attributes{\n                        url\n                      }\n                    }\n                  }\n                }\n              }\n            }\n           \n          }\n        }\n    }\n}\n`;\n  const router = useRouter();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_RESTAURANT_DISHES, {\n    variables: {\n      id: restId\n    }\n  });\n  if (loading) return __jsx(\"p\", null, \"Loading...\");\n  if (error) return __jsx(\"p\", null, \"ERROR here\");\n  if (!data) return __jsx(\"p\", null, \"Not found\");\n  let restaurant = data.restaurant;\n\n  if (restId > 0) {\n    return __jsx(React.Fragment, null, restaurant.data.attributes.dishes.data.map(res => __jsx(Col, {\n      xs: \"6\",\n      sm: \"4\",\n      style: {\n        padding: 0\n      },\n      key: res.id\n    }, __jsx(Card, {\n      style: {\n        margin: \"0 10px\"\n      }\n    }, __jsx(CardImg, {\n      top: true,\n      style: {\n        height: 150,\n        width: 150\n      },\n      src: `http://localhost:1337${res.attributes.image.data.attributes.url}`\n    }), __jsx(CardBody, null, __jsx(CardTitle, null, res.attributes.name), __jsx(CardText, null, res.attributes.description)), \"Price: $\", res.attributes.price, __jsx(\"div\", {\n      className: \"card-footer\"\n    }, __jsx(Button, {\n      color: \"info\",\n      outline: true,\n      onClick: () => addItem(res)\n    }, \"+ Add To Cart\"))))));\n  } else {\n    return __jsx(\"h1\", null, \" No Dishes\");\n  }\n}\n\nexport default Dishes;","map":null,"metadata":{},"sourceType":"module"}